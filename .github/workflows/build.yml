name: Electron Builder Workflow

on:
  push:
    branches:
      - main
  workflow_dispatch:


jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 20

    - name: Install dependencies
      run: npm install

    - name: Build and package Electron app
      run: |
        cd src
        if [ ${{ matrix.os }} == 'ubuntu-latest' ]; then
          target=linux npx electron-builder build --linux
        elif [ ${{ matrix.os }} == 'macos-latest' ]; then
          target=darwin npx electron-builder build --macos --arm64
          target=darwin npx electron-builder build --macos --x64
        elif [ ${{ matrix.os }} == 'windows-latest' ]; then
          target=win32 npx electron-builder build --win --x64
        fi

    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: electron-builds-${{ matrix.os }}
        path: dist

  publish:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Download Linux artifacts
      uses: actions/download-artifact@v2
      with:
        name: electron-builds-ubuntu-latest

    - name: Download macOS artifacts
      uses: actions/download-artifact@v2
      with:
        name: electron-builds-macos-latest

    - name: Download Windows artifacts
      uses: actions/download-artifact@v2
      with:
        name: electron-builds-windows-latest

    - name: Publish artifacts to GitHub Releases
      id: release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          ${{ steps.release.outputs.files }}
        token: ${{ secrets.GITHUB_TOKEN }} 
